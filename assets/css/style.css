main::before {
	position: absolute;
	content: '';
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	background-image: url(https://user-images.githubusercontent.com/87035690/135363778-6daaa32c-2981-4bb0-bfe6-5ad05e6b77aa.jpeg);
	background-size: cover;
	clip-path: polygon(0 0, 100% 0, 100% 80%, 50% 100%, 0 80%);
	z-index: -1;
	opacity: 0.25;
}

header {
	clip-path: polygon(0 0, 100% 0, calc(100% - 1em) 100%, 0 100%);
}

input {
	width: 100%;
	height: 100%;
	border-radius: inherit;
	z-index: 2;
	text-align: center;
	align-self: center;
	justify-self: center;
	outline: none;
	font-weight: 700;
}

button[type='submit'] {
	border-width: 5px;
	transition-property: filter, color, background-color, border-color;
	transition-duration: 350ms;
}

button[type='submit']:disabled {
	position: relative;
	filter: grayscale(1) brightness(0.6);
	cursor: default;
}

.snippet {
	position: relative;
	font-size: 22px;
	background: #0002;
	border-radius: 10px;
	overflow: hidden;
	font-style: italic;
	font-weight: normal;
	height: 100%;
}

.snippet p {
	font-weight: 300;
	font-style: italic;
}

.snippet.labeled {
	display: grid;
	place-items: center;
	padding: 5px;

	grid-template-columns: 2em auto;
}

.snippet.labeled p {
	justify-self: flex-start;
}

.snippet::after {
	content: '';
	position: absolute;
	top: 0;
	left: -300%;
	width: 250px;
	height: 100%;
	box-shadow: 0 0 50px 50px white;
	transform: skewX(-25deg);
	background-color: white;
	opacity: 0.3;
	z-index: 99999;
}

.movie.loading #services {
	overflow: hidden;
}

.loading #poster {
	animation: brighten infinite alternate linear 0.7s;
}

.movie.loading .snippet::after {
	animation: loader infinite linear 1.05s;
}

.input {
	--accent-color: rgb(77, 68, 190);

	display: grid;
	position: relative;
	padding: 6px;
	z-index: 2;
	font-size: 36px;
	background: var(--accent-color);
	color: var(--accent-color);
	width: 2.8em;
	height: 2em;
	transition: background-color 350ms;
	border-radius: 10px;
}

.input.year {
	width: 4em;
}

.input:not(:last-child):after {
	content: '';
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
	z-index: 1;
	right: 0;
	height: 10px;
	width: 100%;
	background-color: inherit;
	transition: right 750ms;
}

.input.filled {
	background-color: #1fd8db;
}

.input.filled::after {
	right: -100%;
}

.date-group {
	display: grid;
	grid-template-columns: repeat(3, auto);
}

.movie {
	position: relative;
	grid-template-rows: 344px 2.5fr 1fr;
	grid-template-columns: repeat(3, 1fr);
	height: 600px;
	width: 850px;
	grid-template-areas: 'poster info info' 'plot plot plot' 'services services services';
}

.movie-info {
	grid-area: info;
}

#movie-title {
	font-size: 52px;
	line-height: 1.1em;
}

#release-date {
	width: 250px;
}

#runtime {
	width: 150px;
}

#rating {
	width: 200px;
}

#poster {
	max-height: 100%;
	grid-area: poster;
}

#plot {
	grid-area: plot;
	font-size: 19px;
}

#services {
	/* flex-direction: row; */
	grid-area: services;
	overflow-x: auto;
	/* padding-bottom: 10px; */
}

/* width */
#services::-webkit-scrollbar {
	height: 5px;
}

/* Track */
#services::-webkit-scrollbar-track {
	background: #ffffff8e;
}

/* Handle */
#services::-webkit-scrollbar-thumb {
	background: rgb(0, 204, 255);
}

/* Handle on hover */
#services::-webkit-scrollbar-thumb:hover {
	background: rgb(0, 102, 255);
}

.redirect-link {
	/* rounded-full text-black text-base bg-gray-50 px-3 py-1 */
	background-color: honeydew;
	border-radius: 9999px;
	padding: 5px 10px;
	color: black;
	font-style: normal;
	font-size: 16px;
	transition-property: background-color, color;
	transition-duration: 300ms;
}
.redirect-link:hover {
	background-color: rgb(255, 113, 113);
	color: white;
}

@media screen and (min-width: 320px) and (max-width: 480px) {
	main {
		padding-top: 100px;
	}

	.input {
		font-size: 27px;
	}

	#movie-title {
		font-size: 36px;
	}

	.movie {
		width: 90%;
		height: fit-content;
		grid-template-areas: 'info' 'plot' 'services';
	}

	#poster {
		display: none;
	}
}

@keyframes loader {
	from {
		left: -300%;
	}
	to {
		left: 150%;
	}
}

@keyframes brighten {
	from {
		filter: brightness(1);
	}

	to {
		filter: brightness(1.3);
	}
}
